//Асинхронный код возникает в JavaScript достаточно часто: при работе с таймерами, при привязке обработчиков событий, при загрузке картинок, при работе с технологией AJAX, позволяющей загружать части страницы с сервера, при работе с NodeJS, представляющим собой серверный JavaScript.

console.log('1')
console.log('2')
//Очевидно, что сначала сработает первый вывод в консоль, а потом - второй. То есть команды нашего кода выполняются по очереди - в порядке их следования в коде. Такой код называется синхронным.

setTimeout(function () {
	console.log('1')
}, 3000)

console.log('2')
//В данном случае команды не выполняются в порядке следования в коде: первый вывод в консоль выполнится, когда приходит его время, но остальной код не ожидает этого момента, а продолжает выполнятся. Такой код называется асинхронным.

//Вы знаете, что с помощью метода addEventListener можно подписаться на различные события, возникающие в элементах страницы. К примеру, подпишемся на клик по некоторому элементу, ссылка на который хранится в переменной elem:

elem.addEventListener('click', function () {
	console.log('1')
})

console.log('2')

//В приведенном коде сначала выполнится второй вывод в консоль. Когда же выполнится первый? Когда-то: выполнение этого кода ожидает случившегося события - клика на элемент. Как только это произойдет, так наш код и выполнится.
